<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.7.4 on win32)" generated="20220127 12:23:49.647" rpa="false" schemaversion="2">
<suite id="s1" name="Demo1" source="C:\RoboProject\Demo\Demo1.robot">
<test id="s1-t1" name="TC_02">
<kw name="SetupDemo" type="SETUP">
<kw name="Log To Console" library="BuiltIn">
<arg>This is setup method</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220127 12:23:49.672" endtime="20220127 12:23:49.673"/>
</kw>
<status status="PASS" starttime="20220127 12:23:49.672" endtime="20220127 12:23:49.673"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>@ {USER}[0]</arg>
<arg>@ {USER} [1]</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20220127 12:23:49.673" endtime="20220127 12:23:49.673"/>
</kw>
<kw name="TeardownDemo" type="TEARDOWN">
<kw name="Log To Console" library="BuiltIn">
<arg>This is teardown</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220127 12:23:49.673" endtime="20220127 12:23:49.674"/>
</kw>
<status status="PASS" starttime="20220127 12:23:49.673" endtime="20220127 12:23:49.674"/>
</kw>
<status status="PASS" starttime="20220127 12:23:49.671" endtime="20220127 12:23:49.674"/>
</test>
<test id="s1-t2" name="TC_04">
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>&amp; {Credentials}[username]</arg>
<arg>&amp; {Credentials}[password]</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20220127 12:23:49.675" endtime="20220127 12:23:49.675"/>
</kw>
<status status="PASS" starttime="20220127 12:23:49.675" endtime="20220127 12:23:49.676"/>
</test>
<test id="s1-t3" name="TC_05">
<kw name="Should Be True" library="BuiltIn">
<arg>4</arg>
<arg>4</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220127 12:23:49.677" endtime="20220127 12:23:49.677"/>
</kw>
<status status="PASS" starttime="20220127 12:23:49.676" endtime="20220127 12:23:49.677"/>
</test>
<test id="s1-t4" name="TC06">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>4</arg>
<arg>4</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20220127 12:23:49.678" endtime="20220127 12:23:49.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>6</arg>
<arg>6</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20220127 12:23:49.679" endtime="20220127 12:23:49.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>9</arg>
<arg>9</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20220127 12:23:49.679" endtime="20220127 12:23:49.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>13</arg>
<arg>13</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20220127 12:23:49.680" endtime="20220127 12:23:49.680"/>
</kw>
<timeout value="1 minute 20 seconds"/>
<status status="PASS" starttime="20220127 12:23:49.678" endtime="20220127 12:23:49.681"/>
</test>
<test id="s1-t5" name="TC_07">
<kw name="Comparetwovariables" library="Userdefinedkeywords">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>$(cmp1)</arg>
<arg>$(cmp2)</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20220127 12:23:49.684" level="FAIL">'$(cmp1)' cannot be converted to an integer: ValueError: invalid literal for int() with base 10: '$(cmp1)'</msg>
<status status="FAIL" starttime="20220127 12:23:49.683" endtime="20220127 12:23:49.684"/>
</kw>
<status status="FAIL" starttime="20220127 12:23:49.683" endtime="20220127 12:23:49.684"/>
</kw>
<status status="FAIL" starttime="20220127 12:23:49.681" endtime="20220127 12:23:49.684">'$(cmp1)' cannot be converted to an integer: ValueError: invalid literal for int() with base 10: '$(cmp1)'</status>
</test>
<status status="FAIL" starttime="20220127 12:23:49.649" endtime="20220127 12:23:49.685"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="1" skip="0" id="s1" name="Demo1">Demo1</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
